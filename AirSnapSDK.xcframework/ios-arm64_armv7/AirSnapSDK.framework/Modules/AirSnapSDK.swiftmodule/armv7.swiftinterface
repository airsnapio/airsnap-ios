// swift-interface-format-version: 1.0
<<<<<<< HEAD:AirSnapSDK.xcframework/ios-arm64_armv7/AirSnapSDK.framework/Modules/AirSnapSDK.swiftmodule/armv7.swiftinterface
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target armv7-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AirSnapSDK
=======
// swift-compiler-version: Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
// swift-module-flags: -target armv7-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AirSnap
@_exported import AirSnap
>>>>>>> 7ef91e5fbf63cccfcafdcce83ba3d9c3392f237e:AirSnap.xcframework/ios-arm64_armv7/AirSnap.framework/Modules/AirSnap.swiftmodule/armv7.swiftinterface
import CommonCrypto
import Foundation
import SQLite3
import Swift
import UIKit
import _Concurrency
@objc public enum PrivacyRule : Swift.Int {
  case masked
  case unmasked
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class AirSnap : ObjectiveC.NSObject {
  @objc public static func start(withAppKey: Swift.String, privacyRule: AirSnapSDK.PrivacyRule = .masked)
  @objc public static func stop()
  @objc public static func setUser(identifier: Swift.String)
  @objc public static func capture()
  @objc deinit
}
extension AirSnapSDK.PrivacyRule : Swift.Equatable {}
extension AirSnapSDK.PrivacyRule : Swift.Hashable {}
extension AirSnapSDK.PrivacyRule : Swift.RawRepresentable {}
